apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
  # app.openshift.io/vcs-ref: f7580aa1eb6f7176705176e201ecff4de93edafb
  #app.openshift.io/vcs-uri: https://github.com/cloud-native-garage-method-japan-cohort/kei-kimura-express-sample-app.git
  labels:
    app: backend-app
    app.kubernetes.io/instance: backend-app
    app.kubernetes.io/name: backend-app
    app.openshift.io/runtime: python
  name: backend-app
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: backend-app
      app.kubernetes.io/name: backend-app
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: backend-app
        app.kubernetes.io/name: backend-app
    spec:
      containers:
        - env:
            - name: INGRESS_HOST
            - name: PROTOCOLS
            - name: LOG_LEVEL
              value: debug
            - name: WATSON_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ibm-text-to-speech-secret
                  key: api-key
            - name: WATSON_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: ibm-text-to-speech-secret
                  key: endpoint
            - name: FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: frontend_url
          image: quay.io/shinnosuke_yoshizawa_ibm/checkride-be
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: backend-app
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              # このポート
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
